assets <- subset(Q1_B_106, select=c("FSN", ls(Q1_B_106, pattern = "own"))
ls(Q1_B_106, pattern = "own")
ls(Q1_B_106, pattern = "own")
assets <- subset(Q1_B_106, select=c("FSN", ls(Q1_B_106, pattern = "own"))
str(assets)
assets <- subset(Q1_B_106, select=c("FSN", ls(Q1_B_106, pattern = "own"))
table(Q1_B$Wall_Material)
table(Q1_B$Wall_Material)
table(Q1_B_106$own_Radio, Q1_B_106$Radio, useNA = "always")
summary(Q1_B_106$own_Radio)
ls(Q1_B_106, pattern = "own")
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)))
str(assets)
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | select=c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | select=c("FSN"))
assets <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) | select=c("FSN"))
assets <- subset(Q1_B_106, (select=grepl("own", names(Q1_B_106))) | (select=c("FSN")))
assets <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) | select=c("FSN"))
assets2 <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) | select=c("FSN"))
assets <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) | c("FSN"))
assets <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) & select=c("FSN"))
assets <- subset(Q1_B_106, select=grepl("own", names(Q1_B_106)) | select = c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | select = c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | "FSN")
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | =c("FSN"))
assets <- subset(Q1_B_106, select = grepl("own", names(Q1_B_106)) | c("FSN"))
grepl("own", names(Q1_B_106))
assets <- subset(Q1_B_106, select = grepl("own" | "FSN" , names(Q1_B_106)))
grepl("own", names(Q1_B_106))
grepl("own|FSN", names(Q1_B_106))
assets <- subset(Q1_B_106, select = grepl("own|FSN", names(Q1_B_106)))
str(assets)
summary(assets)
round(sapply(assets, FUN=mean),3)
assets[sapply(assets, function(x) any(x > 3))]
colMeans(assets > 0.5)
colMeans(assets > 1)
colMeans(assets > 0.5)
assets[colMeans(assets > 0.5) > 0]
select = round(sapply(assets, FUN=mean),3) > 0.5
assets <- subset(Q1_B_106, select = round(sapply(assets, FUN=mean),3) > 0.5)
str(assets)
assets <- subset(Q1_B_106, select = grepl("own|FSN", names(Q1_B_106)))
str(assets)
summary(assets)
round(sapply(assets, FUN=mean),3)
names(assets)
round(sapply(assets, FUN=mean),3)
assets2 <- subset(assets, select = c("FSN", "own_Radio", "own_Sewing_Machine", "own_Watch", "own_Pressure_Cooker", "own_Chairs", "own_Tables", "own_Cupboards", "own_Bicycle", "own_Motor_Cycle", "own_Electric_Fan")
assets2 <- subset(assets, select = c("FSN", "own_Radio", "own_Sewing_Machine", "own_Watch", "own_Pressure_Cooker", "own_Chairs", "own_Tables", "own_Cupboards", "own_Bicycle", "own_Motor_Cycle", "own_Electric_Fan")
assets2 <- subset(assets, select = c(FSN, own_Radio, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Cupboards, own_Bicycle, own_Motor_Cycle, own_Electric_Fan)
assets2 <- subset(assets, select = c(FSN, own_Radio, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Cupboards, own_Bicycle, own_Motor_Cycle, own_Electric_Fan)
assets2 <- subset(assets, select = c(FSN, own_Radio, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Cupboards, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))
str(assets2)
assets2 <- subset(assets, select = c(FSN, own_Radio,own_Mobile, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Cupboards, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))
str(assets2)
str(assets2)
round(sapply(assets2, FUN=mean),3)
assets2 <- subset(assets, select = c(FSN, own_Radio,own_Mobile, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))
str(assets2)
round(sapply(assets2, FUN=mean),3)
#First I need only a dataset with FSN and WallMaterial variables
hlp2 <- subset(Q1_B, select = c(FSN, Wall_Material)
hlp2 <- subset(Q1_B, select = c(FSN, Wall_Material))
#Then I am going to create a new variable called brickwall according to what I need
hlp2$brick_wall <- NA
hlp2$brick_wall[hlp2$Wall_Material %in% c(6,162,163)] <- 0
hlp2$brick_wall[hlp2$Wall_Material %in% c(164:166)] <- 1
table(hlp2$brick_wall, Q1_B$Wall_Material)
summary(Q1_B_106$own_Radio)
summary(Q1_B_106$own_Radio)
summary(assets)
round(sapply(assets, FUN=mean),3)   #To display the mean of each variable with 3
round(sapply(assets2, FUN=mean),3)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
rowSums(x)
colSums(x)
rowSums(x); colSums(x)
colMeans(assets)
round(sapply(assets, FUN=mean),3)
colMeans(assets)
sapply(assets, FUN=mean)
round(sapply(assets, FUN=mean),3)
round(sapply(assets, FUN=mean),3) >0.5
round(sapply(assets, FUN=mean),3)
round(sapply(assets, FUN=mean),3) >0.05
round(sapply(assets, FUN=mean),3) > 0.05 & < 0.95
round(sapply(assets, FUN=mean),3) > 0.05
round(sapply(assets2, FUN=mean),3)
round(sapply(assets, FUN=mean),3)
round(sapply(assets, FUN=mean),3) > 0.05
& round(sapply(assets, FUN=mean),3) < 0.95
round(sapply(assets, FUN=mean),3) > 0.05 & round(sapply(assets, FUN=mean),3) < 0.95
round(sapply(assets, FUN=mean),3) > 0.05
sapply(assets, FUN=mean > 0.05 sapply(assets, FUN=mean < 0.95
sapply(assets, FUN=mean > 0.05 & sapply(assets, FUN=mean < 0.95
sapply(assets, FUN=mean > 0.05 & sapply(assets, FUN=mean < 0.95
sapply(assets, FUN=mean > 0.05 & sapply(assets, FUN=mean) < 0.95
sapply(assets, FUN=mean > 0.05 & sapply(assets, FUN=mean) < 0.95
sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95
sapply(assets, FUN=mean) > 0.05 & < 0.95
grepl("own|FSN", names(Q1_B_106))
assets3 <- subset(Q1_B_106, sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95)
str(assets2)
str(assets3)
assets3 <- subset(assets, sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95)
str(assets2)
str(assets3)
assets3 <- subset(assets, sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95)
assets3 <- subset(assets, sapply(assets, FUN=mean) > 0.05)
str(assets3)
sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95
select=sapply(assets, FUN=mean) > 0.05
select=sapply(assets, FUN=mean) > 0.05
select=c(sapply(assets, FUN=mean) > 0.05)
select=c(sapply(assets, FUN=mean) > 0.05)
sapply(assets, FUN=mean) > 0.05
select(sapply(assets, FUN=mean) > 0.05)
sapply(assets, FUN=mean) > 0.05
wifi <- data.frame(A=1:4, B=runif(4), C=5:8)
wifi
wifi[c("B", "C")] <- lapply(wifi[c("B", "C")], function(x) -1 * x)
wifi
df <- mtcars
df
df$gear <- factor(df$gear)
mtcars$cyl
Values_selected <- split(df, mtcars$cyl)
Values_selected
mtcars$cyl
Values_selected
str(df)
str(Values_selected)
sapply(assets, FUN=mean) > 0.05
class(sapply(assets, FUN=mean))
sapply(assets, FUN=mean) > 0.05
sapply(assets, FUN=mean) > 0.05
sapply(assets, FUN=mean) > 0.05
assets3 <- subset(assets, select = c(FSN, sapply(assets, FUN=mean) > 0.05 ))
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c(sapply(assets, FUN=mean) > 0.05 ))
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c(sapply(assets, FUN=mean) > 0.05,sapply(assets, FUN=mean) < 0.95 ))
assets3 <- subset(assets, select = c(sapply(assets, FUN=mean) > 0.05, sapply(assets, FUN=mean) < 0.95 ))
assets3 <- subset(assets, select = c(sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95 ))
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c(FSN | (sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95 )))
str(assets2)
str(assets3)
assets3 <- subset(assets, select =
c(
"FSN" |
( sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95 )
))
assets3 <- subset(assets, select =
c(
"FSN" &
sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
assets3 <- subset(assets, select = c(
"FSN" &
sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
assets3 <- subset(assets, select = c( "FSN" & sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
assets3 <- subset(assets, select = c( FSN & sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
assets3 <- subset(assets, select = c( FSN & sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c( FSN | sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c( FSN, (sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95)
)
)
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c( "FSN", (sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95)
)
)
assets3 <- subset(assets, select = c( FSN, list(sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95)
)
)
assets3 <- subset(assets, select = c( FSN, l(sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95)
)
)
assets3 <- subset(assets, select = c( FSN, (sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95)
)
)
str(assets2)
str(assets3)
assets3 <- subset(assets, select = c(sapply(assets, FUN=mean) > 0.05
& sapply(assets, FUN=mean) < 0.95
)
)
str(assets2)
str(assets3)
sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95
test <- sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95
test
class(test)
test <- sapply(assets, FUN=mean)
class(test)
test
class(test)
test <- sapply(assets, FUN=mean) > 0.05 & sapply(assets, FUN=mean) < 0.95
test
class(test)
str(assets2)
names(Newtable)
str(Newtable)
Q1_B_1$anim <- substr(Q1_B_1$anim, 0, 4)
table(Q1_B_1$anim)
str(Q1_B_1)
table(Q1_B_1$anim)
str(Q1_B_1)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(Newtable)
names(animals)
View(Left)
view(animals)
names(animals)
View(animals)
names(animals)
View(animals)
animals <- sapply(animals,   # Replace values in all columns
function(x) replace(x, x %in% NA, 0))
View(animals)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
names(animals)
View(animals)
View(animals)
View(animals)
animals <- sapply(animals,   # Replace values in all columns
function(x) replace(x, x %in% NA, 0))
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
View(animals)
str(animals)
animals <- sapply(animals,   # Replace values in all columns
function(x) replace(x, x %in% NA, 0))
str(animals)
str(animals)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
View(animals)
animals$count_Buff[animals$count_Buff ==0] <- NA
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
names(animals)
animals$count_Buff[animals$count_Buff ==NA] <- 0
animals$count_Buff[animals$count_Buff ==NA] <- 0
animals$count_Buff[animals$count_Buff == NA] <- 0
View(animals)
animals$count_Buff[animals$count_Buff is NA] <- 0
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
animals$count_Buff[is.na(animals$count_Buff)| animals$count_Buff == -1]<- 0
names(animals)
animals$count_Cows[is.na(animals$count_Cows)| animals$count_Cows == -1]<- 0
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
animals <- sapply(animals,   # Replace values in all columns
function(x) replace(x, x %in% NA, 0))
class(animals)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
names(animals)
View(animals)
animals$count_Buff[is.na(animals$count_Buff)| animals$count_Buff == -1]<- 0
animals$count_Cows[is.na(animals$count_Cows)| animals$count_Cows == -1]<- 0
hlp1 <- subset(animals, select=c(FSN, count_Cow, count_Buf))
table(Q1_B_1$anim)
Q1_B_1$anim[Q1_B_1$anim =="Buffaloes"] <- "Buff"
Q1_B_1$anim[Q1_B_1$anim =="Goats"] <- "Goat"
#But if we want to keep the 4 (x) first characters in a all rows
Q1_B_1$anim <- substr(Q1_B_1$anim, 0, 3)
table(Q1_B_1$anim)
str(Q1_B_1)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
names(animals)
#View(animals)
animals$count_Buf[is.na(animals$count_Buf)| animals$count_Buf == -1]<- 0
animals$count_Cow[is.na(animals$count_Cow)| animals$count_Cow == -1]<- 0
hlp1 <- subset(animals, select=c(FSN, count_Cow, count_Buf))
hlp1$own_bov <- NA
hlp1$own_bov[hlp1$count_Cow== 0 & hlp1$count_Buf==0] <- 0
hlp1$own_bov[hlp1$count_Cow> 0 | hlp1$count_Buf>0] <- 1
str(hlp1)
str(hlp1)
str(hlp2)
str(hlp2)
str(hlp1)
str(hlp1)
str(hlp2)
hlp  <-  merge(hlp1, hlp2, all=TRUE, by = "FSN")
str(hlp)
str(hlp2)
str(hlp1)
str(hlp2)
hlp  <-  merge(hlp1, hlp2, all=TRUE, by = "FSN")
str(hlp)
view(hlp)
View(hlp)
str(hlp)
str(assets2)
assets3  <-  merge(assets3, hlp, all=TRUE, by = "FSN")
assets3  <-  merge(assets2, hlp, all=TRUE, by = "FSN")
str(hlp)
str(assets2)
assets3  <-  merge(assets2, hlp, all=TRUE, by = "FSN")
str(assets3)
#View(assets3)
table (assets3$own_bov)
table (assets3$own_bov, useNA = "ifany")
str(assets3)
table (assets3$own_bov)
table (assets3$own_bov, useNA = "ifany")
str(assets3)
table (assets3$own_bov, useNA = "always")
table (assets3$own_bov)
table (assets3$own_bov, useNA = "ifany")
table (assets3$own_bov, useNA = "always")
"always"
str(assets3)
assets3$own_bov[is.na(assets3$own_bov)]<- 0
View(assets3)
Q1_B <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv", sep=",", dec= ".")
summary(Q1_B$FSN)
top <- subset(Q1_B, subset= FSN < 52032)
bottom <- subset(Q1_B, subset= FSN >= 52032)
str(Q1_B)
str(top)
str(bottom)
merged_top_bottom  <-  rbind(top,bottom)
str(merged_top_bottom)
names(Q1_B)
Left <- subset(Q1_B, select=c("ID", "FSN", "Neem_Tree", "Neem_Tree_Distance", "Neem_Tree_Size", "Neem_Tree_Age", "Neem_Tree_Usage", "Neem_Tree_Use_Other", "Bamboo_Tree", "Bamboo_Tree_Dist", "Banana_Tree", "Banana_Tree_Dist", "Rice_Field", "Rice_Field_Dist", "Perm_Water_Body", "Perm_Wat_Body_Dist",  "Wat_Body_Mid_Point", "No_Mosquito_Net", "Sprayed_2010", "Sprayed_2009", "Floor_Material"))
str(Left)
Rigth <- subset(Q1_B, select=c("FSN", "Other_Floor_Mat", "Is_Floor_Damp", "Roof_Material", "Other_Roof_Material", "Wall_Material", "Other_Wall_Material", "Windows_in_Room", "Granaries_in_HH", "Source_Drink_Water", "Other_Src_Drink_Wat", "Toilet_Facility", "Other_Toilet_Fac", "Cooking_Fuel", "Other_Cooking_Fuel", "Source_Light", "Other_Source_Light", "Electricity_in_HH", "No_Of_Rooms", "No_Sleeping_Rooms"))
#Or select the opposite (With a "-" in front of the c):
#Rigth <- subset(Q1_B, select=-c("ID", "Neem_Tree", "Neem_Tree_Distance", "Neem_Tree_Size", "Neem_Tree_Age", "Neem_Tree_Usage", "Neem_Tree_Use_Other", "Bamboo_Tree", "Bamboo_Tree_Dist", "Banana_Tree", "Banana_Tree_Dist", "Rice_Field", "Rice_Field_Dist", "Perm_Water_Body", "Perm_Wat_Body_Dist",  "Wat_Body_Mid_Point", "No_Mosquito_Net", "Sprayed_2010", "Sprayed_2009", "Floor_Material"))
str(Rigth)
merged_left_right  <-  merge(Left, Rigth, all=TRUE, by = "FSN")
str(merged_left_right)
Q1_B_1 <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_1.csv", sep=",", dec= ".")
str(Q1_B_1)
head(Q1_B_1)
names(Q1_B_1)[c(2,3,4,5,6)] <- c("anim", "count", "dist", "indor", "daysin")
str(Q1_B_1)
table(Q1_B_1$anim)
Q1_B_1$anim[Q1_B_1$anim =="Buffaloes"] <- "Buff"
Q1_B_1$anim[Q1_B_1$anim =="Goats"] <- "Goat"
#But if we want to keep the 4 (x) first characters in a all rows
Q1_B_1$anim <- substr(Q1_B_1$anim, 0, 3)
table(Q1_B_1$anim)
str(Q1_B_1)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
names(animals)
#View(animals)
animals$count_Buf[is.na(animals$count_Buf)| animals$count_Buf == -1]<- 0
animals$count_Cow[is.na(animals$count_Cow)| animals$count_Cow == -1]<- 0
Q1_B <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv", sep=",", dec= ".")
summary(Q1_B$FSN)
top <- subset(Q1_B, subset= FSN < 52032)
bottom <- subset(Q1_B, subset= FSN >= 52032)
str(Q1_B)
str(top)
str(bottom)
merged_top_bottom  <-  rbind(top,bottom)
str(merged_top_bottom)
names(Q1_B)
Left <- subset(Q1_B, select=c("ID", "FSN", "Neem_Tree", "Neem_Tree_Distance", "Neem_Tree_Size", "Neem_Tree_Age", "Neem_Tree_Usage", "Neem_Tree_Use_Other", "Bamboo_Tree", "Bamboo_Tree_Dist", "Banana_Tree", "Banana_Tree_Dist", "Rice_Field", "Rice_Field_Dist", "Perm_Water_Body", "Perm_Wat_Body_Dist",  "Wat_Body_Mid_Point", "No_Mosquito_Net", "Sprayed_2010", "Sprayed_2009", "Floor_Material"))
str(Left)
Rigth <- subset(Q1_B, select=c("FSN", "Other_Floor_Mat", "Is_Floor_Damp", "Roof_Material", "Other_Roof_Material", "Wall_Material", "Other_Wall_Material", "Windows_in_Room", "Granaries_in_HH", "Source_Drink_Water", "Other_Src_Drink_Wat", "Toilet_Facility", "Other_Toilet_Fac", "Cooking_Fuel", "Other_Cooking_Fuel", "Source_Light", "Other_Source_Light", "Electricity_in_HH", "No_Of_Rooms", "No_Sleeping_Rooms"))
#Or select the opposite (With a "-" in front of the c):
#Rigth <- subset(Q1_B, select=-c("ID", "Neem_Tree", "Neem_Tree_Distance", "Neem_Tree_Size", "Neem_Tree_Age", "Neem_Tree_Usage", "Neem_Tree_Use_Other", "Bamboo_Tree", "Bamboo_Tree_Dist", "Banana_Tree", "Banana_Tree_Dist", "Rice_Field", "Rice_Field_Dist", "Perm_Water_Body", "Perm_Wat_Body_Dist",  "Wat_Body_Mid_Point", "No_Mosquito_Net", "Sprayed_2010", "Sprayed_2009", "Floor_Material"))
str(Rigth)
merged_left_right  <-  merge(Left, Rigth, all=TRUE, by = "FSN")
str(merged_left_right)
Q1_B_1 <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_1.csv", sep=",", dec= ".")
str(Q1_B_1)
head(Q1_B_1)
names(Q1_B_1)[c(2,3,4,5,6)] <- c("anim", "count", "dist", "indor", "daysin")
str(Q1_B_1)
table(Q1_B_1$anim)
Q1_B_1$anim[Q1_B_1$anim =="Buffaloes"] <- "Buff"
Q1_B_1$anim[Q1_B_1$anim =="Goats"] <- "Goat"
#But if we want to keep the 4 (x) first characters in a all rows
Q1_B_1$anim <- substr(Q1_B_1$anim, 0, 3)
table(Q1_B_1$anim)
str(Q1_B_1)
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
names(animals)
#View(animals)
animals$count_Buf[is.na(animals$count_Buf)| animals$count_Buf == -1]<- 0
animals$count_Cow[is.na(animals$count_Cow)| animals$count_Cow == -1]<- 0
animals <- reshape(Q1_B_1,direction = "wide", timevar ="anim", idvar ="FSN", v.names = c("count","dist","indor", "daysin"), sep = "_")
str(animals)
class(animals)
Q1_B_106 <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_106.csv", sep=",", dec= ".")
str(Q1_B_106)
summary(Q1_B_106)
#We can do it by using "if else":
Q1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)
#But other way is:
#Q1_B_106$own_Radio <- as.numeric(Q1_B_106$Radio > 0)
#Ask to create a variable called "own_Radio" only TRUE when "Radio" is more than 0 and converting that into a number (as.numeric) (1:true,0:false)
#Checking if it works
table(Q1_B_106$own_Radio, Q1_B_106$Radio, useNA = "always")
summary(Q1_B_106$own_Radio)
Q1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)
Q1_B_106$own_CD_Player <- ifelse(Q1_B_106$CD_Player>0,1,0)
Q1_B_106$own_BW_Television <- ifelse(Q1_B_106$BW_Television>0,1,0)
Q1_B_106$own_Color_Television <- ifelse(Q1_B_106$Color_Television>0,1,0)
Q1_B_106$own_Video_DVD_Player <- ifelse(Q1_B_106$Video_DVD_Player>0,1,0)
Q1_B_106$own_Mobile <- ifelse(Q1_B_106$Mobile>0,1,0)
Q1_B_106$own_Non_Mobile_Phone <- ifelse(Q1_B_106$Non_Mobile_Phone>0,1,0)
Q1_B_106$own_Refrigerator <- ifelse(Q1_B_106$Refrigerator>0,1,0)
Q1_B_106$own_Iron <- ifelse(Q1_B_106$Iron>0,1,0)
Q1_B_106$own_Sewing_Machine <- ifelse(Q1_B_106$Sewing_Machine>0,1,0)
Q1_B_106$own_Watch <- ifelse(Q1_B_106$Watch>0,1,0)
Q1_B_106$own_Pressure_Cooker <- ifelse(Q1_B_106$Pressure_Cooker>0,1,0)
Q1_B_106$own_Chairs <- ifelse(Q1_B_106$Chairs>0,1,0)
Q1_B_106$own_Sofas <- ifelse(Q1_B_106$Sofas>0,1,0)
Q1_B_106$own_Tables <- ifelse(Q1_B_106$Tables>0,1,0)
Q1_B_106$own_Cot_Bed <- ifelse(Q1_B_106$Cot_Bed>0,1,0)
Q1_B_106$own_Cupboards <- ifelse(Q1_B_106$Cupboards>0,1,0)
Q1_B_106$own_Bicycle <- ifelse(Q1_B_106$Bicycle>0,1,0)
Q1_B_106$own_Motor_Cycle <- ifelse(Q1_B_106$Motor_Cycle>0,1,0)
Q1_B_106$own_Animal_Draw_Cart <- ifelse(Q1_B_106$Animal_Draw_Cart>0,1,0)
Q1_B_106$own_Car <- ifelse(Q1_B_106$Car>0,1,0)
Q1_B_106$own_Tractor <- ifelse(Q1_B_106$Tractor>0,1,0)
Q1_B_106$own_Computer <- ifelse(Q1_B_106$Computer>0,1,0)
Q1_B_106$own_Electric_Fan <- ifelse(Q1_B_106$Electric_Fan>0,1,0)
assets <- subset(Q1_B_106, select = grepl("own|FSN", names(Q1_B_106)))
str(assets)
#summary(assets)
round(sapply(assets, FUN=mean),3)   #To display the mean of each variable with 3 decimals
assets2 <- subset(assets, select = c(FSN, own_Radio,own_Mobile, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))
str(assets2)
hlp1 <- subset(animals, select=c(FSN, count_Cow, count_Buf))
hlp1$own_bov <- NA
hlp1$own_bov[hlp1$count_Cow== 0 & hlp1$count_Buf==0] <- 0
hlp1$own_bov[hlp1$count_Cow> 0 | hlp1$count_Buf>0] <- 1
str(hlp1)
Q1_B <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv", sep=",", dec= ".")
table(Q1_B$Wall_Material)
hlp2 <- subset(Q1_B, select = c(FSN, Wall_Material))
hlp2$brick_wall <- NA
hlp2$brick_wall[hlp2$Wall_Material %in% c(6,162,163)] <- 0
hlp2$brick_wall[hlp2$Wall_Material %in% c(164:166)] <- 1
table(hlp2$brick_wall, Q1_B$Wall_Material)
str(hlp1)
str(hlp2)
hlp  <-  merge(hlp2, hlp1, all=TRUE, by = "FSN")
str(hlp)
#View(hlp)
str(hlp)
str(assets2)
assets3  <-  merge(assets2, hlp, all=TRUE, by = "FSN")
str(assets3)
#View(assets3)
table (assets3$own_bov)
table (assets3$own_bov, useNA = "ifany")
table (assets3$own_bov, useNA = "always")
str(assets3)
assets3$own_bov[is.na(assets3$own_bov)]<- 0
View(assets3)
summary(dataset)
assets3$own_bov[is.na(assets3$own_bov)]<- 0
assets3$own_bov[is.na(assets3$own_bov)]<- 0
jjj
#summary(dataset)
#or
#round(sapply(dataset, FUN=mean),2)
hlp1 <- subset(animals, select=c(FSN, count_Cow, count_Buf))
