---
title: "Data Analysis Wk2"
format: 
  html:
    self-contained: true
    code-line-numbers: true
  pdf: 
    documentclass: article
custom_title_page: false
filters:
  - lightbox
lightbox: auto
---

---
subtitle: "Data Analysis Week - Session 1"
date: 2023-02-27

author:
  - name: Javier Silva-Valencia
    orcid: 0000-0002-5982-2821
    email: javier.silva@unmsm.edu.pe
    affiliations:
      - name: Instituut Voor Tropische Geneeskunde. Antwerp-Belgium

language: 
  title-block-author-single: "Writer"
  
abstract: Today we are going to create an index/score. For this we have a lot of variables of socioeconomical aspects and we are going to clean and select the ones we are going to use to create the index/score
---

------------------------------------------------------------------------

------------------------------------------------------------------------


### Exercise 1

#### 0. Import CSV

0.1 Set working directory: We are not going to do it now, but this is useful to say to R that all the files we are going to work is that one directory.

0.2 Importing the CSV database under the name of Q1_B_106, with "," as separator, and with "." as decimal:

```{r}
Q1_B_106 <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B_106.csv", sep=",", dec= ".")
```


#### 1. Cleaning the dataset

1.1 Seeing the structure of the dataset
```{r}
str(Q1_B_106)
```

::: callout-tip
According to diccionary

-1 : Missing or not available

0, 1, 2, 3 : Number of items they have
::: 


```{r}
summary(Q1_B_106)
```
::: callout-tip
Example of what we can see: The maximum number of radios in a household is 6
::: 

#### 2. Replace values

2.1 We need that all ‘-1’  be converting to ‘0’ 

and all value more than ‘≥ 1’ be converting to ‘1’

```{r}
#We can do it by using "if else":
Q1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)


#But other way is: 
#Q1_B_106$own_Radio <- as.numeric(Q1_B_106$Radio > 0)
#Ask to create a variable called "own_Radio" only TRUE when "Radio" is more than 0 and converting that into a number (as.numeric) (1:true,0:false)


#Checking if it works
table(Q1_B_106$own_Radio, Q1_B_106$Radio, useNA = "always")
summary(Q1_B_106$own_Radio)

```
We need to do that for every variable

```{r}
Q1_B_106$own_Radio <- ifelse(Q1_B_106$Radio>0,1,0)
Q1_B_106$own_CD_Player <- ifelse(Q1_B_106$CD_Player>0,1,0)
Q1_B_106$own_BW_Television <- ifelse(Q1_B_106$BW_Television>0,1,0)
Q1_B_106$own_Color_Television <- ifelse(Q1_B_106$Color_Television>0,1,0)
Q1_B_106$own_Video_DVD_Player <- ifelse(Q1_B_106$Video_DVD_Player>0,1,0)
Q1_B_106$own_Mobile <- ifelse(Q1_B_106$Mobile>0,1,0)
Q1_B_106$own_Non_Mobile_Phone <- ifelse(Q1_B_106$Non_Mobile_Phone>0,1,0)
Q1_B_106$own_Refrigerator <- ifelse(Q1_B_106$Refrigerator>0,1,0)
Q1_B_106$own_Iron <- ifelse(Q1_B_106$Iron>0,1,0)
Q1_B_106$own_Sewing_Machine <- ifelse(Q1_B_106$Sewing_Machine>0,1,0)
Q1_B_106$own_Watch <- ifelse(Q1_B_106$Watch>0,1,0)
Q1_B_106$own_Pressure_Cooker <- ifelse(Q1_B_106$Pressure_Cooker>0,1,0)
Q1_B_106$own_Chairs <- ifelse(Q1_B_106$Chairs>0,1,0)
Q1_B_106$own_Sofas <- ifelse(Q1_B_106$Sofas>0,1,0)
Q1_B_106$own_Tables <- ifelse(Q1_B_106$Tables>0,1,0)
Q1_B_106$own_Cot_Bed <- ifelse(Q1_B_106$Cot_Bed>0,1,0)
Q1_B_106$own_Cupboards <- ifelse(Q1_B_106$Cupboards>0,1,0)
Q1_B_106$own_Bicycle <- ifelse(Q1_B_106$Bicycle>0,1,0)
Q1_B_106$own_Motor_Cycle <- ifelse(Q1_B_106$Motor_Cycle>0,1,0)
Q1_B_106$own_Animal_Draw_Cart <- ifelse(Q1_B_106$Animal_Draw_Cart>0,1,0)
Q1_B_106$own_Car <- ifelse(Q1_B_106$Car>0,1,0)
Q1_B_106$own_Tractor <- ifelse(Q1_B_106$Tractor>0,1,0)
Q1_B_106$own_Computer <- ifelse(Q1_B_106$Computer>0,1,0)
Q1_B_106$own_Electric_Fan <- ifelse(Q1_B_106$Electric_Fan>0,1,0)
```


2.2 Now we will make a subset containing only the ‘own’ variables and  FSN
```{r}
assets <- subset(Q1_B_106, select = grepl("own|FSN", names(Q1_B_106)))
str(assets)  
```

2.3 Now we will focus only in those variables whose mean have a value between 5-95% (0.05-0.95)

why?: Dont know, I need to ask for that

```{r}
#summary(assets)
round(sapply(assets, FUN=mean),3)   #To display the mean of each variable with 3 decimals
```
::: callout-tip
Besides FSN, 10 variables have a value between 5-95% (0.05-0.95) 
::: 


2.3 We are going to create a new subset with only in those variables whose mean have a value between 5-95% (0.05-0.95)

```{r}
assets2 <- subset(assets, select = c(FSN, own_Radio,own_Mobile, own_Sewing_Machine, own_Watch, own_Pressure_Cooker, own_Chairs, own_Tables, own_Bicycle, own_Motor_Cycle, own_Electric_Fan))
str(assets2)
#round(sapply(assets2, FUN=mean),3)  
```



#### 3. Adding brick wall variable

The researchers noticed that having a "brick_wall" variable is important, so we need to incorporate it. The only problem is that the brick_wall information is in another dataset.


3.1 Opening Q1_B dataset
```{r}
Q1_B <- read.csv("C:/Users/pined/OneDrive - Universidad Nacional Mayor de San Marcos/Javier 2022/Belgica/AC2_DataAnalysis_ThWk/Material/Q1_B.csv", sep=",", dec= ".")
```

3.2 Checking the variable Wall_Material in the Q1_B dataset
```{r}
table(Q1_B$Wall_Material)
```
::: callout-tip
According the code list:

    6= Other
    163= Grass
    163= Bamboo
    164, 165, 166= Brick

So we only need those who had the value 164 or 165 in the Wall_Material variable
::: 

3.3. I only need "FSN" and "WallMaterial" variables
```{r}
hlp2 <- subset(Q1_B, select = c(FSN, Wall_Material))
```

3.4  Creating a new variable called brickwall according to what I need
```{r}
hlp2$brick_wall <- NA
hlp2$brick_wall[hlp2$Wall_Material %in% c(6,162,163)] <- 0
hlp2$brick_wall[hlp2$Wall_Material %in% c(164:166)] <- 1

table(hlp2$brick_wall, Q1_B$Wall_Material)
```















